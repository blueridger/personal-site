{"version":3,"sources":["music.js","App.js","reportWebVitals.js","index.js"],"names":["ionianNotes","ionianIntervals","ionianChords","modes","ionian","dorian","phrygian","lydian","mixolydian","aeolian","locrian","availableModes","Array","from","Object","keys","rotate","array","num","result","slice","elements","splice","push","sum","lastIndex","reduce","a","b","getNote","key","mode","keySharpFlatModifier","split","k","keySharpFlat","keyIndex","indexOf","index","notes","cIntervalsStartingWithKey","intervals","chords","note","chord","sharpFlatModifier","sharpFlatString","i","console","log","isTheoretical","numConfig","match","length","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","theme","createTheme","palette","text","primary","secondary","background","paper","RANDOM","RANDOM_TH","App","React","setKey","setMode","setNum","answer","setAnswer","localStorage","getItem","keyConfig","setKeyConfig","modeConfig","setModeConfig","setNumConfig","confetti","setConfetti","useEffect","setItem","createQuestion","newMode","Math","floor","random","newKey","newNum","checkAnswer","e","preventDefault","target","value","setTimeout","handleKeySelect","handleModeSelect","handleNumSelect","ThemeProvider","className","toUpperCase","onSubmit","active","TextField","id","variant","size","autoComplete","inputProps","style","fontSize","autoFocus","Tooltip","title","IconButton","HelpOutline","FormControl","InputLabel","Select","labelId","label","onChange","concat","map","MenuItem","x","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4a69e10.chunk.js","sourcesContent":["export const ionianNotes = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\nexport const ionianIntervals = [2, 2, 1, 2, 2, 2, 1];\nexport const ionianChords = [\"\", \"m\", \"m\", \"\", \"\", \"m\", \"dim\"];\n\nconst modes = {\n  ionian: 0,\n  dorian: 1,\n  phrygian: 2,\n  lydian: 3,\n  mixolydian: 4,\n  aeolian: 5,\n  locrian: 6\n};\n\nexport const availableModes = Array.from(Object.keys(modes))\n\nfunction rotate(array, num) {\n  const result = array.slice();\n  const elements = result.splice(0, num);\n  result.push(...elements);\n  return result;\n}\n\nfunction sum(array, lastIndex) {\n  return array.slice(lastIndex).reduce((a, b) => a + b, 0);\n}\n\nexport function getNote(key, num, mode) {\n  let keySharpFlatModifier = 0;\n  const [k, keySharpFlat] = key.split(\"\");\n  if (keySharpFlat === \"b\") keySharpFlatModifier = -1;\n  if (keySharpFlat === \"#\") keySharpFlatModifier = 1;\n\n  const keyIndex = ionianNotes.indexOf(k);\n  const index = num - 1;\n  const notes = rotate(ionianNotes, keyIndex);\n  const cIntervalsStartingWithKey = rotate(ionianIntervals, keyIndex);\n  const intervals = rotate(ionianIntervals, modes[mode]);\n  const chords = rotate(ionianChords, modes[mode]);\n  const note = notes[index];\n  const chord = chords[index];\n\n  const sharpFlatModifier =\n    sum(intervals, index) -\n    sum(cIntervalsStartingWithKey, index) -\n    keySharpFlatModifier;\n  let sharpFlatString = \"\";\n  if (sharpFlatModifier < 0) \n    for (let i = -1; i >= sharpFlatModifier; i--)\n      sharpFlatString += \"#\";\n  if (sharpFlatModifier > 0) \n    for (let i = 1; i <= sharpFlatModifier; i++)\n      sharpFlatString += \"b\";\n  console.log(note + sharpFlatString + chord)\n  return note + sharpFlatString + chord;\n}\n\nexport function isTheoretical(key, mode, numConfig) {\n  for (let i = 1; i <= numConfig; i++) {\n    const note = getNote(key, i, mode);\n    if ((note.match(/[#b]/g) || []).length > 1)\n      return true;\n  }\n  return false;\n}\n\nexport const keys = [\n  \"C\",\n  \"C#\",\n  \"Db\",\n  \"D\",\n  \"D#\",\n  \"Eb\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"Gb\",\n  \"G\",\n  \"G#\",\n  \"Ab\",\n  \"A\",\n  \"A#\",\n  \"Bb\",\n  \"B\",\n  \"B#\",\n];\n\n// const key = \"Db\";\n// const mode = \"ionian\";\n// console.log(getNote(key, 1, mode));\n// console.log(getNote(key, 2, mode));\n// console.log(getNote(key, 3, mode));\n// console.log(getNote(key, 4, mode));\n// console.log(getNote(key, 5, mode));\n// console.log(getNote(key, 6, mode));\n// console.log(getNote(key, 7, mode));\n","import \"./App.css\";\nimport * as React from \"react\";\nimport {\n  TextField,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  Tooltip,\n  IconButton,\n} from \"@mui/material\";\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { HelpOutline } from \"@mui/icons-material\";\nimport { getNote, availableModes as modes, keys, isTheoretical } from \"./music\";\nimport Confetti from 'react-dom-confetti';\nimport { useEffect } from \"react\";\n\nconst config = {\n  angle: 20,\n  spread: 360,\n  startVelocity: 40,\n  elementCount: 70,\n  dragFriction: 0.12,\n  duration: 3000,\n  stagger: 3,\n  width: \"10px\",\n  height: \"10px\",\n  perspective: \"500px\",\n  colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n};\n\nconst theme = createTheme({\n  palette: {\n    text: {\n      primary: '#DC79D6',\n      secondary: '#DC79D6',\n    },\n    background: {\n      paper: '#141313',\n    },\n  },\n});\n\nconst RANDOM = \"random\"\nconst RANDOM_TH = \"random w/theoreticals\"\n\nfunction App() {\n  const [key, setKey] = React.useState(keys[0]);\n  const [mode, setMode] = React.useState(modes[0]);\n  const [num, setNum] = React.useState(1);\n  const [answer, setAnswer] = React.useState(null);\n  const [keyConfig, setKeyConfig] = React.useState(\n    localStorage.getItem(\"keyConfig\") || \"C\"\n  );\n  const [modeConfig, setModeConfig] = React.useState(\n    localStorage.getItem(\"modeConfig\") || \"ionian\"\n  );\n  const [numConfig, setNumConfig] = React.useState(\n    localStorage.getItem(\"numConfig\") || 7\n  );\n  const [confetti, setConfetti] = React.useState(false);\n  useEffect(() => localStorage.setItem(\"keyConfig\", keyConfig), [keyConfig])\n  useEffect(() => localStorage.setItem(\"modeConfig\", modeConfig), [modeConfig])\n  useEffect(() => localStorage.setItem(\"numConfig\", numConfig), [numConfig])\n\n  const createQuestion = React.useCallback(\n    function () {\n      const newMode =\n        modeConfig === RANDOM\n          ? modes[Math.floor(Math.random() * modes.length)]\n          : modeConfig;\n      let newKey = keyConfig === RANDOM || keyConfig === RANDOM_TH\n        ? keys[Math.floor(Math.random() * keys.length)]\n        : keyConfig;\n      while (keyConfig === RANDOM && isTheoretical(newKey, newMode, numConfig))\n        newKey = keys[Math.floor(Math.random() * keys.length)];\n      const newNum = Math.floor(Math.random() * numConfig) + 1;\n      setAnswer(getNote(newKey, newNum, newMode));\n      setKey(newKey);\n      setNum(newNum);\n      setMode(newMode);\n    },\n    [keyConfig, modeConfig, numConfig]\n  );\n  const checkAnswer = React.useCallback(\n    function (e) {\n      e.preventDefault();\n      if (e.target[0].value === answer) {\n        setConfetti(true)\n        createQuestion();\n        setTimeout(() => setConfetti(false), 5)\n        e.target[0].value = \"\";\n      }\n    },\n    [createQuestion, answer]\n  );\n  const handleKeySelect = React.useCallback((e) => {\n    setKeyConfig(e.target.value);\n  }, []);\n  const handleModeSelect = React.useCallback((e) => {\n    setModeConfig(e.target.value);\n  }, []);\n  const handleNumSelect = React.useCallback((e) => {\n    setNumConfig(e.target.value);\n  }, []);\n  React.useEffect(createQuestion, [createQuestion]);\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>{mode[0].toUpperCase() + mode.slice(1)}</h1>\n        <p>\n          What is chord number {num} in the key of {key}\n        </p>\n        <form onSubmit={checkAnswer}>\n          <span>\n          \n          <Confetti active={ confetti } config={ config } />\n            <TextField\n              id=\"answer\"\n              variant=\"filled\"\n              size=\"normal\"\n              autoComplete=\"off\"\n              inputProps={{\n                style: { fontSize: 40 },\n              }}\n              autoFocus\n            />\n            <Tooltip title=\"Press enter to check. Example answer formats: Gbm, A#, B\">\n              <IconButton>\n                <HelpOutline fontSize=\"large\" />\n              </IconButton>\n            </Tooltip>\n          </span>\n        </form>\n        <br />\n        <div className=\"settings\">\n          <FormControl >\n            <InputLabel id=\"key-label\" >Key</InputLabel>\n            <Select\n              labelId=\"key-label\"\n              id=\"keySelect\"\n              value={keyConfig}\n              label=\"Key\"\n              onChange={handleKeySelect}\n            >\n              {[RANDOM, RANDOM_TH].concat(keys).map((key) => (\n                <MenuItem key={key} value={key}>\n                  {key}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <br />\n\n          <FormControl>\n            <InputLabel id=\"mode-label\">Mode</InputLabel>\n            <Select\n              labelId=\"mode-label\"\n              id=\"modeSelect\"\n              value={modeConfig}\n              label=\"Mode\"\n              onChange={handleModeSelect}\n            >\n              {[RANDOM].concat(modes).map((x) => (\n                <MenuItem key={x} value={x}>\n                  {x}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <br />\n\n          <FormControl>\n            <InputLabel id=\"num-label\">Numbers</InputLabel>\n            <Select\n              labelId=\"num-label\"\n              id=\"numSelect\"\n              value={numConfig}\n              label=\"Numbers\"\n              onChange={handleNumSelect}\n            >\n              <MenuItem value={7}>1-7</MenuItem>\n              <MenuItem value={13}>1-13</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n      </header>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}