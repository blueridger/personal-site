{"version":3,"sources":["music.js","App.js","reportWebVitals.js","index.js"],"names":["ionianNotes","ionianIntervals","ionianChords","modes","ionian","dorian","mixolydian","availableModes","Array","from","Object","keys","rotate","array","num","result","slice","elements","splice","push","sum","lastIndex","reduce","a","b","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","theme","createTheme","palette","text","primary","secondary","background","paper","App","React","key","setKey","mode","setMode","setNum","answer","setAnswer","keyConfig","setKeyConfig","modeConfig","setModeConfig","numConfig","setNumConfig","confetti","setConfetti","createQuestion","newKey","Math","floor","random","length","newMode","newNum","keySharpFlatModifier","split","k","keySharpFlat","keyIndex","indexOf","index","notes","cIntervalsStartingWithKey","intervals","chords","note","chord","sharpFlatModifier","sharpFlatString","getNote","checkAnswer","e","preventDefault","target","value","setTimeout","handleKeySelect","handleModeSelect","handleNumSelect","ThemeProvider","className","toUpperCase","onSubmit","active","TextField","id","variant","size","autoComplete","inputProps","style","fontSize","autoFocus","Tooltip","title","IconButton","HelpOutline","FormControl","InputLabel","Select","labelId","label","onChange","concat","map","MenuItem","x","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c1d630a.chunk.js","sourcesContent":["export const ionianNotes = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\nexport const ionianIntervals = [2, 2, 1, 2, 2, 2, 1];\nexport const ionianChords = [\"\", \"m\", \"m\", \"\", \"\", \"m\", \"dim\"];\n\nconst modes = {\n  ionian: 0,\n  dorian: 1,\n  mixolydian: 4,\n};\n\nexport const availableModes = Array.from(Object.keys(modes))\n\nfunction rotate(array, num) {\n  const result = array.slice();\n  const elements = result.splice(0, num);\n  result.push(...elements);\n  return result;\n}\n\nfunction sum(array, lastIndex) {\n  return array.slice(lastIndex).reduce((a, b) => a + b, 0);\n}\n\nexport function getNote(key, num, mode) {\n  let keySharpFlatModifier = 0;\n  const [k, keySharpFlat] = key.split(\"\");\n  if (keySharpFlat === \"b\") keySharpFlatModifier = -1;\n  if (keySharpFlat === \"#\") keySharpFlatModifier = 1;\n\n  const keyIndex = ionianNotes.indexOf(k);\n  const index = num - 1;\n  const notes = rotate(ionianNotes, keyIndex);\n  const cIntervalsStartingWithKey = rotate(ionianIntervals, keyIndex);\n  const intervals = rotate(ionianIntervals, modes[mode]);\n  const chords = rotate(ionianChords, modes[mode]);\n  const note = notes[index];\n  const chord = chords[index];\n\n  const sharpFlatModifier =\n    sum(intervals, index) -\n    sum(cIntervalsStartingWithKey, index) -\n    keySharpFlatModifier;\n  let sharpFlatString = \"\";\n  if (sharpFlatModifier === -1) sharpFlatString = \"#\";\n  if (sharpFlatModifier === 1) sharpFlatString = \"b\";\n\n  return note + sharpFlatString + chord;\n}\n\nexport const keys = [\n  \"C\",\n  \"C#\",\n  \"Db\",\n  \"D\",\n  \"D#\",\n  \"Eb\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"Gb\",\n  \"G\",\n  \"G#\",\n  \"Ab\",\n  \"A\",\n  \"A#\",\n  \"Bb\",\n  \"B\",\n];\n\n// const key = \"Db\";\n// const mode = \"ionian\";\n// console.log(getNote(key, 1, mode));\n// console.log(getNote(key, 2, mode));\n// console.log(getNote(key, 3, mode));\n// console.log(getNote(key, 4, mode));\n// console.log(getNote(key, 5, mode));\n// console.log(getNote(key, 6, mode));\n// console.log(getNote(key, 7, mode));\n","import \"./App.css\";\nimport * as React from \"react\";\nimport {\n  TextField,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  Tooltip,\n  IconButton,\n} from \"@mui/material\";\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { HelpOutline } from \"@mui/icons-material\";\nimport { getNote, availableModes as modes, keys } from \"./music\";\nimport Confetti from 'react-dom-confetti';\n\nconst config = {\n  angle: 20,\n  spread: 360,\n  startVelocity: 40,\n  elementCount: 70,\n  dragFriction: 0.12,\n  duration: 3000,\n  stagger: 3,\n  width: \"10px\",\n  height: \"10px\",\n  perspective: \"500px\",\n  colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n};\n\nconst theme = createTheme({\n  palette: {\n    text: {\n      primary: '#DC79D6',\n      secondary: '#DC79D6',\n    },\n    background: {\n      paper: '#141313',\n    },\n  },\n});\n\nfunction App() {\n  const [key, setKey] = React.useState(keys[0]);\n  const [mode, setMode] = React.useState(modes[0]);\n  const [num, setNum] = React.useState(1);\n  const [answer, setAnswer] = React.useState(null);\n  const [keyConfig, setKeyConfig] = React.useState(\"random\");\n  const [modeConfig, setModeConfig] = React.useState(\"random\");\n  const [numConfig, setNumConfig] = React.useState(7);\n  const [confetti, setConfetti] = React.useState(false);\n  const createQuestion = React.useCallback(\n    function () {\n      const newKey =\n        keyConfig === \"random\"\n          ? keys[Math.floor(Math.random() * keys.length)]\n          : keyConfig;\n      const newMode =\n        modeConfig === \"random\"\n          ? modes[Math.floor(Math.random() * modes.length)]\n          : modeConfig;\n      const newNum = Math.floor(Math.random() * numConfig) + 1;\n      setAnswer(getNote(newKey, newNum, newMode));\n      setKey(newKey);\n      setNum(newNum);\n      setMode(newMode);\n    },\n    [keyConfig, modeConfig, numConfig]\n  );\n  const checkAnswer = React.useCallback(\n    function (e) {\n      e.preventDefault();\n      if (e.target[0].value === answer) {\n        setConfetti(true)\n        createQuestion();\n        setTimeout(() => setConfetti(false), 5)\n        e.target[0].value = \"\";\n      }\n    },\n    [createQuestion, answer]\n  );\n  const handleKeySelect = React.useCallback((e) => {\n    setKeyConfig(e.target.value);\n  }, []);\n  const handleModeSelect = React.useCallback((e) => {\n    setModeConfig(e.target.value);\n  }, []);\n  const handleNumSelect = React.useCallback((e) => {\n    setNumConfig(e.target.value);\n  }, []);\n  React.useEffect(createQuestion, [createQuestion]);\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>{mode[0].toUpperCase() + mode.slice(1)}</h1>\n        <p>\n          What is chord number {num} in the key of {key}\n        </p>\n        <form onSubmit={checkAnswer}>\n          <span>\n          \n          <Confetti active={ confetti } config={ config }/>\n            <TextField\n              id=\"answer\"\n              variant=\"filled\"\n              size=\"normal\"\n              autoComplete=\"off\"\n              inputProps={{\n                style: { fontSize: 40 },\n              }}\n              autoFocus\n            />\n            <Tooltip title=\"Press enter to check. Example answer formats: Gbm, A#, B\">\n              <IconButton>\n                <HelpOutline fontSize=\"large\" />\n              </IconButton>\n            </Tooltip>\n          </span>\n        </form>\n        <br />\n        <FormControl >\n          <InputLabel id=\"key-label\" >Key</InputLabel>\n          <Select\n            labelId=\"key-label\"\n            id=\"keySelect\"\n            value={keyConfig}\n            label=\"Key\"\n            onChange={handleKeySelect}\n          >\n            {[\"random\"].concat(keys).map((key) => (\n              <MenuItem key={key} value={key}>\n                {key}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <br />\n\n        <FormControl>\n          <InputLabel id=\"mode-label\">Mode</InputLabel>\n          <Select\n            labelId=\"mode-label\"\n            id=\"modeSelect\"\n            value={modeConfig}\n            label=\"Mode\"\n            onChange={handleModeSelect}\n          >\n            {[\"random\"].concat(modes).map((x) => (\n              <MenuItem key={x} value={x}>\n                {x}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <br />\n\n        <FormControl>\n          <InputLabel id=\"num-label\">Numbers</InputLabel>\n          <Select\n            labelId=\"num-label\"\n            id=\"numSelect\"\n            value={numConfig}\n            label=\"Numbers\"\n            onChange={handleNumSelect}\n          >\n            <MenuItem value={7}>1-7</MenuItem>\n            <MenuItem value={13}>1-13</MenuItem>\n          </Select>\n        </FormControl>\n      </header>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}